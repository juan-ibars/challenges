// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	domain "github.mpi-internal.com/juan-ibars/learning-go/internal/domain"

	uuid "github.com/google/uuid"
)

// FindAdService is an autogenerated mock type for the FindAdService type
type FindAdService struct {
	mock.Mock
}

// Execute provides a mock function with given fields: id
func (_m *FindAdService) Execute(id uuid.UUID) (domain.Ad, error) {
	ret := _m.Called(id)

	var r0 domain.Ad
	var r1 error
	if rf, ok := ret.Get(0).(func(uuid.UUID) (domain.Ad, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(uuid.UUID) domain.Ad); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(domain.Ad)
	}

	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFindAdService interface {
	mock.TestingT
	Cleanup(func())
}

// NewFindAdService creates a new instance of FindAdService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFindAdService(t mockConstructorTestingTNewFindAdService) *FindAdService {
	mock := &FindAdService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
